include ./libtests.mk
include ./config.mk

BINDIR=bin

install: $(LIBS_SHERPA_PATH)/libSherpaMain.so
$(LIBS_SHERPA_PATH)/libSherpaMain.so :
	mkdir -p $(MCGTESTDIR)/work && cd $(MCGTESTDIR)/work && \
	rm -rf sherpa/$(SHERPA_VERSION) && \
	cp $(MCGENERATORS)/distribution/sherpa/sherpa-$(SHERPA_VERSION)-src.tgz . && \
	tar xzf sherpa-$(SHERPA_VERSION)-src.tgz
	cd $(MCGTESTDIR)/work/sherpa/$(SHERPA_VERSION) && \
	chmod a+x lcg_configure && \
	INSTALL_DIR=$(SHERPA_PATH) HEPMC_INSTALL_DIR=$(HEPMC_PATH) LHAPDF_INSTALL_DIR=$(LHAPDF_PATH) RIVET_INSTALL_DIR=$(RIVET_PATH) FASTJET_INSTALL_DIR=$(FASTJET_PATH) BOOST_INCLUDE_DIR=$(INCLUDE_BOOST_PATH) GSL_INCLUDE_DIR=$(INCLUDE_GSL_PATH) ./lcg_configure && \
	make install

sherpa_test1 sherpa_test2:
	@echo -e \
	'#! /bin/bash\n' \
	'\n' \
	'get_xs_1 () \n' \
	'{ \n' \
	'   cat $$1 | grep -E "Store [ ]*result[ ]*:[ ]*xs [ ]*for" \\\n' \
	" | sed 's/^.*xs for //;s/://g;s/ pb[ ]*+\/\-//;s/\%.*$$//;'" ' \\\n' \
	' | { sigtot=0.; errtot=0.; \n' \
	'     while read re sig pct ; do \n' \
	'       sigtot=$$(echo -e "scale=10; $$sigtot + $$sig" | bc -q) ; \n' \
	'       errtot=$$(echo  "scale=10; $$errtot + ($$sig * $$pct / 100.)^2" | bc -q) ; \n' \
	'     done ; \n' \
	'     echo $@ $$2  $$sigtot $$(echo "scale=10; sqrt($$errtot)" | bc -q) > ../testi.dat ;\n' \
	'   } ;\n' \
	'}\n' \
	'\n' \
	'get_xs_2 () \n' \
	'{ \n' \
	'   local xx=`sed '"'/Total XS is /!d;s/[^0-9]*//;s/pb[^0-9]*//;s/ pb.*$$//;'"'< $$1 ` \n' \
	'   echo $@ $$2 $$xx > ../testi.dat \n' \
        '   echo "writing xsec to xsec.out" \n' \
        '   echo $$xx \n' \
        '   echo $$xx > xsec.out \n' \
	'}\n' \
	'\n' \
	'cd ./Sherpa && rm -rf LHC-TEST _sherpa_logfile_ \n' \
	"MAJOR_VERSION=`echo $(SHERPA_VERSION) | cut -d . -f 2`\n" \
	"TEST_NUM=`echo $@ | sed 's/[^0-9]*//'`\n" \
	"PROG=$(SHERPA_PATH)/bin/Sherpa\n" \
	"DIR_TO_COPY=LHC-1.2.0\n" \
	'if [ $${MAJOR_VERSION} -lt 2 ] ; then DIR_TO_COPY=LHC-1.1.3 ; fi \n' \
	'cp -r $${DIR_TO_COPY} LHC-TEST \n' \
	'cd LHC-TEST \n' \
	'if [ $${TEST_NUM} -ne 1 ] ; then cp -f Run$${TEST_NUM}.dat Run.dat ; fi \n' \
	'cd ..\n' \
	'echo First run of Sherpa \n' \
	'$$PROG PATH=LHC-TEST/ > _sherpa_logfile_      # Run Sherpa in LHC/ \n' \
	"if [ -f LHC-TEST/makelibs ] ; then \n" \
	"  cd LHC-TEST && ./makelibs >&/dev/null && cd .. \n" \
	'  echo Second run of Sherpa \n' \
	'  $$PROG PATH=LHC-TEST/ >> _sherpa_logfile_  # \n' \
	'fi \n' \
	'if [ $${MAJOR_VERSION} -lt 2 ] ; then \n' \
	'   get_xs_1 _sherpa_logfile_ 1 \n' \
	'else \n' \
	'   get_xs_2 _sherpa_logfile_ 1 \n' \
	'fi \n' \
	'cd .. \n' \
	'exit \n' \
	> $@.sh
	@chmod +x $@.sh
	@ln -sf $@.sh $@.exe
	@mkdir -p $(BINDIR)
	@ln -sf $(SHERPA_PATH)/bin/Sherpa $(BINDIR)/$@.exe
	@echo "" > ldlp.sh

sherpa_readtest1 sherpa_readtest2:
	@mkdir -p $(BINDIR)
	@rm -f $(BINDIR)/$@
	$(CXX) $@.cc -o $(BINDIR)/$@.exe $(CXXFLAGS) \
	$(INCLUDE_LIBTESTS) $(INCLUDE_HEPMC) $(INCLUDE_CLHEP) \
	-L$(LIBS_LIBTESTS_PATH) -lanalyserhepmc \
	-L$(LIBS_HEPMC_PATH) -lHepMC $(LIBS_CLHEP)
	@echo export LD_LIBRARY_PATH=$(LIBS_THEPEG_PATH):$(LIBS_HEPMC_PATH):$(LIBS_CLHEP_PATH):$(LIBS_GSL_PATH):$(LIBS_LHAPDF_PATH):$(LIBS_LIBTESTS_PATH):$(LD_LIBRARY_PATH) > ldlp.sh
	@echo export LHAPATH=$(LHAPDF_PATH)/../share/PDFsets >> ldlp.sh

# Clean up: remove executables and outdated files.
.PHONY: clean distclean

clean:
	rm -rf $(PROGNAME).exe ldlp.sh Sherpa/LHC-TEST

distclean: clean
	rm -f $(BINDIR)/$(PROGNAME).exe
	cd Sherpa && rm -rf _sherpa_logfile_ xsection* Sherpa_ref*
